from enum import StrEnum
import os
import bpy

this_dir = os.path.dirname(__file__)

class Exercise_Name(StrEnum):
    BICEP_CURL = 'Bicep curl'
    PIKE_WALK = 'Pike walk'
    PUSH_UP = 'Push up'
    SIT_UP = 'Sit up'

# imagine this was generated by an AI model âœ¨
workout = [
    # exercise, reps
    (Exercise_Name.PIKE_WALK, 1),
    (Exercise_Name.SIT_UP, 3),
    (Exercise_Name.BICEP_CURL, 1),
    (Exercise_Name.PUSH_UP, 3),
]
REST_FRAMES = 1 * 30

blend_file = os.path.join(this_dir, '..', 'exercise-model.blend')
bpy.ops.wm.open_mainfile(filepath=blend_file)

obj = bpy.data.objects.get('Exercise model')
obj.animation_data_create()
nla_track = obj.animation_data.nla_tracks.new()

frame_start = 1
for exercise, reps in workout:
    action = bpy.data.actions.get(exercise)
    strip = nla_track.strips.new(name=exercise, start=frame_start, action=action)
    strip.repeat = reps
    frame_start += int(action.frame_range[1] * reps) + REST_FRAMES

# adjust timeline length to sum of all strips
bpy.context.scene.frame_end = frame_start

# our export format doesn't like multiple strips per track
# so we combine them into a new action
bpy.ops.nla.bake(frame_start=1, frame_end=frame_start, only_selected=False)
combined_action = bpy.data.actions[-1]
# the source strips are still here
# we have to manually remove them and replace them with the new action
for strip in nla_track.strips:
    nla_track.strips.remove(strip)
nla_track.strips.new(name=exercise, start=1, action=combined_action)

glb_file = os.path.join(this_dir, '..', 'out', 'workout.glb')
bpy.ops.export_scene.gltf(filepath=glb_file, export_format='GLB')

html = """
<style>
  body {
    margin: 0;
    background-color: lightblue;
    font: 20pt sans-serif;
  }
  model-viewer {
    width: 100%;
    height: 100%;
  }
  ul {
    position: absolute;
    top: 1em;
    left: 1em;
  }
</style>

<script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js"></script>

<model-viewer alt="Workout" src="workout.glb" ar autoplay shadow-intensity="1" camera-controls touch-action="pan-y"></model-viewer>
"""

# append list of exercises and reps
html = html + '<ul>'
for exercise, reps in workout:
    html = html + '<li>' + exercise + ' &times; ' + str(reps) + '</li>'
html = html + '</ul>'

html_file = os.path.join(this_dir, '..', 'out', 'index.html')
f = open(html_file, 'w')
f.write(html)
f.close()
